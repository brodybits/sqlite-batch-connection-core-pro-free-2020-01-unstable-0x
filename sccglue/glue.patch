diff --git a/sccglue/jni/SCCoreGlue_JNI.c b/sccglue/jni/SCCoreGlue_JNI.c
index 0613da0..0e5031f 100644
--- a/sccglue/jni/SCCoreGlue_JNI.c
+++ b/sccglue/jni/SCCoreGlue_JNI.c
@@ -102,10 +102,10 @@ Java_io_sqlc_SCCoreGlue_scc_1bind_1text__IILjava_lang_String_2(JNIEnv *env, jcla
  */
 JNIEXPORT jint JNICALL
 Java_io_sqlc_SCCoreGlue_scc_1bind_1text_1utf16_1bytes__IILjava_lang_String_2I(JNIEnv *env, jclass _unused, jint connection_id, jint index, jstring text, jint length) {
-  const char* _strchars_text = NULL;
+  const void * _strchars_text = NULL;
   int _res;
   if ( NULL != text ) {
-    _strchars_text = (*env)->GetStringUTFChars(env, text, (jboolean*)NULL);
+    _strchars_text = (*env)->GetStringChars(env, text, (jboolean*)NULL);
   if ( NULL == _strchars_text ) {
       (*env)->ThrowNew(env, (*env)->FindClass(env, "java/lang/OutOfMemoryError"),
                        "Failed to get UTF-8 chars for argument \"text\" in native dispatcher for \"scc_bind_text_utf16_bytes\"");
@@ -114,7 +114,7 @@ Java_io_sqlc_SCCoreGlue_scc_1bind_1text_1utf16_1bytes__IILjava_lang_String_2I(JN
   }
   _res = scc_bind_text_utf16_bytes((int) connection_id, (int) index, (void *) _strchars_text, (int) length);
   if ( NULL != text ) {
-    (*env)->ReleaseStringUTFChars(env, text, _strchars_text);
+    (*env)->ReleaseStringChars(env, text, _strchars_text);
   }
   return _res;
 }
